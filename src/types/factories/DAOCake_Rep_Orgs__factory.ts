/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  DAOCake_Rep_Orgs,
  DAOCake_Rep_OrgsInterface,
} from "../DAOCake_Rep_Orgs";
import type { PromiseOrValue } from "../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ref",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "members",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "voteForRequired",
        type: "uint16",
      },
    ],
    name: "LogNewOrg",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "LogRemOrg",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ref",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "members",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "membersApproved",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "proposals",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "voteForRequired",
        type: "uint16",
      },
    ],
    name: "LogUpdateOrg",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getOrg",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "ref",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
      {
        internalType: "uint16",
        name: "nMembers",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "voteForRequired",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgKey",
        type: "bytes32",
      },
    ],
    name: "getOrgApprovedMembers",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "array",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getOrgAtIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrgCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgKey",
        type: "bytes32",
      },
    ],
    name: "getOrgMembers",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "array",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgKey",
        type: "bytes32",
      },
    ],
    name: "getVotesRequired",
    outputs: [
      {
        internalType: "uint16",
        name: "votesRequired",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
    ],
    name: "memberAdd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
    ],
    name: "memberApproved",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
    ],
    name: "memberApprovedExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
    ],
    name: "memberExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "ref",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
    ],
    name: "newOrg",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "proposalKey",
        type: "bytes32",
      },
    ],
    name: "proposalAdd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "remOrg",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgKey",
        type: "bytes32",
      },
      {
        internalType: "uint16",
        name: "votesRequired",
        type: "uint16",
      },
    ],
    name: "setVotesRequired",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "ref",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
      {
        internalType: "uint16",
        name: "nMembers",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "voteForRequired",
        type: "uint16",
      },
    ],
    name: "updateOrg",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611826806100206000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c80636e6fcabf11610097578063cf71e22411610066578063cf71e22414610243578063ea12889114610256578063f113694814610269578063fd81ded21461027c57600080fd5b80636e6fcabf146101d957806381e84589146101f95780638a6119121461021d5780639889f0141461023057600080fd5b806338a699a4116100d357806338a699a41461016b5780635c90bc561461017e5780636751698a14610191578063699e6618146101a457600080fd5b806313aa8b82146101055780631cafc7091461012b578063222831841461014e57806323d2625314610163575b600080fd5b61011861011336600461125f565b6102b6565b6040519081526020015b60405180910390f35b61013e610139366004611278565b6102c8565b6040519015158152602001610122565b61016161015c36600461133d565b61034a565b005b600154610118565b61013e61017936600461125f565b610487565b61016161018c366004611278565b610493565b61016161019f36600461125f565b61060d565b6101616101b23660046113c9565b600091825260026020526040909120600301805461ffff191661ffff909216919091179055565b6101ec6101e736600461125f565b6106db565b60405161012291906113f5565b61020c61020736600461125f565b6107a9565b604051610122959493929190611486565b61013e61022b366004611278565b610970565b61016161023e366004611278565b6109ed565b610161610251366004611278565b610b52565b6101ec61026436600461125f565b610ca0565b6101616102773660046114ce565b610d6c565b6102a361028a36600461125f565b60009081526002602052604090206003015461ffff1690565b60405161ffff9091168152602001610122565b60006102c28183610ea2565b92915050565b60006102d48184610ecc565b6103255760405162461bcd60e51b815260206004820152601f60248201527f43616e27742066696e64204f726720746f20636865636b204d656d6265722e0060448201526064015b60405180910390fd5b5060009182526002602090815260408084209284526004909201905290205460ff1690565b610355600085610f1c565b60008481526002602090815260409091208451909161037891839187019061116f565b50825161038e906001830190602086019061116f565b5060028101829055600381018054600683018054600161ffff19909116811790915560098401805463ffffffff19908116909155909116620100011782556005830180548083018255600091825260208083209091018690558582526004850181526040808320805460ff19908116861790915560088701805480870182559085528385200188905587845260078701909252918290208054909116909217909155905490517f65a3890cb89f183e84abf5e6910b7a05d9b149e8a0333adf9a242dbecfaf027391610478913391899189918991899161ffff620100008204811692911690611565565b60405180910390a15050505050565b60006102c28183610ecc565b61049e600083610ecc565b6104fa5760405162461bcd60e51b815260206004820152602760248201527f43616e27742061646420746f20616e204f7267207468617420646f65736e27746044820152661032bc34b9ba1760c91b606482015260840161031c565b600082815260026020908152604080832084845260048101909252822054909160ff9091161515900361059a5760038101546105419062010000900461ffff1660016115e7565b60038201805461ffff92909216620100000263ffff0000199092169190911790556005810180546001818101835560009283526020808420909201859055848352600484019091526040909120805460ff191690911790555b6003810154600682015460098301546040517fce8e2620d8a370fb7594c8b89319394fe398efb67829b2afe458508aadee9dd7936106009333938993889360018501938b9361ffff6201000084048116949281169363ffffffff909216929116906116e6565b60405180910390a1505050565b610618600082611046565b60008181526002602052604081209061063182826111f3565b61063f6001830160006111f3565b60006002830181905560038301805463ffffffff19169055610665906005840190611230565b60068201805461ffff19169055610680600883016000611230565b60098201805463ffffffff1916905561069d600b83016000611230565b505060408051338152602081018390527fe64d627c106f3fc3a7c779a7a8e23f5e63ff1022b375d114bfde3cf997ed621d910160405180910390a150565b60606106e8600083610ecc565b6107405760405162461bcd60e51b8152602060048201526024808201527f43616e27742067657420616e204f7267207468617420646f65736e277420657860448201526334b9ba1760e11b606482015260840161031c565b60008281526002602090815260409182902060088101805484518185028101850190955280855291939290919083018282801561079c57602002820191906000526020600020905b815481526020019060010190808311610788575b5050505050915050919050565b606080600080806107ba8187610ecc565b6108125760405162461bcd60e51b8152602060048201526024808201527f43616e27742067657420616e204f7267207468617420646f65736e277420657860448201526334b9ba1760e11b606482015260840161031c565b6000868152600260208190526040909120908101546003820154825483926001840192909161ffff620100008304811692169085906108509061160d565b80601f016020809104026020016040519081016040528092919081815260200182805461087c9061160d565b80156108c95780601f1061089e576101008083540402835291602001916108c9565b820191906000526020600020905b8154815290600101906020018083116108ac57829003601f168201915b505050505094508380546108dc9061160d565b80601f01602080910402602001604051908101604052809291908181526020018280546109089061160d565b80156109555780601f1061092a57610100808354040283529160200191610955565b820191906000526020600020905b81548152906001019060200180831161093857829003601f168201915b50505050509350955095509550955095505091939590929450565b600061097c8184610ecc565b6109c85760405162461bcd60e51b815260206004820152601f60248201527f43616e27742066696e64204f726720746f20636865636b204d656d6265722e00604482015260640161031c565b5060009182526002602090815260408084209284526007909201905290205460ff1690565b6109f8600083610ecc565b610a545760405162461bcd60e51b815260206004820152602760248201527f43616e27742061646420746f20616e204f7267207468617420646f65736e27746044820152661032bc34b9ba1760c91b606482015260840161031c565b6000828152600260209081526040808320848452600a8101909252822054909160ff90911615159003610aeb576009810154610a979063ffffffff16600161176d565b60098201805463ffffffff191663ffffffff92909216919091179055600b810180546001818101835560009283526020808420909201859055848352600a84019091526040909120805460ff191690911790555b60028101546003820154600683015460098401546040517fce8e2620d8a370fb7594c8b89319394fe398efb67829b2afe458508aadee9dd7946106009433948a94899460018601949361ffff62010000820481169481169363ffffffff16929116906116e6565b610b5d600083610ecc565b610bb95760405162461bcd60e51b815260206004820152602760248201527f43616e27742061646420746f20616e204f7267207468617420646f65736e27746044820152661032bc34b9ba1760c91b606482015260840161031c565b600082815260026020908152604080832084845260078101909252822054909160ff9091161515900361059a576006810154610bfa9061ffff1660016115e7565b60068201805461ffff191661ffff928316178155600883018054600181810183556000928352602080842090920187905586835260078601909152604091829020805460ff19168217905560038501549254600986015492517fce8e2620d8a370fb7594c8b89319394fe398efb67829b2afe458508aadee9dd7956106009533958b958a95908601948c946201000085048116949281169363ffffffff169216906116e6565b6060610cad600083610ecc565b610d055760405162461bcd60e51b8152602060048201526024808201527f43616e27742067657420616e204f7267207468617420646f65736e277420657860448201526334b9ba1760e11b606482015260840161031c565b60008281526002602090815260409182902060058101805484518185028101850190955280855291939290919083018282801561079c5760200282019190600052602060002090815481526020019060010190808311610788575050505050915050919050565b610d77600087610ecc565b610dd35760405162461bcd60e51b815260206004820152602760248201527f43616e27742075706461746520616e204f7267207468617420646f65736e27746044820152661032bc34b9ba1760c91b606482015260840161031c565b600086815260026020908152604090912086519091610df691839189019061116f565b508451610e0c906001830190602088019061116f565b506002810184905560038101805463ffffffff19166201000061ffff8681169190910261ffff19169190911784821617909155600682015460098301546040517fce8e2620d8a370fb7594c8b89319394fe398efb67829b2afe458508aadee9dd793610e919333938d938d938d938d938d93919092169163ffffffff16908c9061178c565b60405180910390a150505050505050565b6000826001018281548110610eb957610eb96117d6565b9060005260206000200154905092915050565b60018201546000908103610ee2575060006102c2565b6000828152602084905260409020546001840180548492908110610f0857610f086117d6565b906000526020600020015414905092915050565b6000819003610f935760405162461bcd60e51b815260206004820152602860248201527f556e6f7264657265644b65795365742831303029202d204b65792063616e6e6f60448201527f7420626520307830000000000000000000000000000000000000000000000000606482015260840161031c565b610f9d8282610ecc565b156110105760405162461bcd60e51b815260206004820152603560248201527f556e6f7264657265644b65795365742831303129202d204b657920616c72656160448201527f64792065786973747320696e20746865207365742e0000000000000000000000606482015260840161031c565b600180830180548083018255600082815260209020018390555461103491906117ec565b60009182526020929092526040902055565b6110508282610ecc565b6110c25760405162461bcd60e51b815260206004820152603560248201527f556e6f7264657265644b65795365742831303229202d204b657920646f65732060448201527f6e6f7420657869737420696e20746865207365742e0000000000000000000000606482015260840161031c565b600182810180546000926110d5916117ec565b815481106110e5576110e56117d6565b6000918252602080832090910154848352908590526040808320548284529220829055600185018054919350839183908110611123576111236117d6565b60009182526020808320909101929092558481529085905260408120556001840180548061115357611153611803565b6001900381819060005260206000200160009055905550505050565b82805461117b9061160d565b90600052602060002090601f01602090048101928261119d57600085556111e3565b82601f106111b657805160ff19168380011785556111e3565b828001600101855582156111e3579182015b828111156111e35782518255916020019190600101906111c8565b506111ef92915061124a565b5090565b5080546111ff9061160d565b6000825580601f1061120f575050565b601f01602090049060005260206000209081019061122d919061124a565b50565b508054600082559060005260206000209081019061122d91905b5b808211156111ef576000815560010161124b565b60006020828403121561127157600080fd5b5035919050565b6000806040838503121561128b57600080fd5b50508035926020909101359150565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126112c157600080fd5b813567ffffffffffffffff808211156112dc576112dc61129a565b604051601f8301601f19908116603f011681019082821181831017156113045761130461129a565b8160405283815286602085880101111561131d57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561135357600080fd5b84359350602085013567ffffffffffffffff8082111561137257600080fd5b61137e888389016112b0565b9450604087013591508082111561139457600080fd5b506113a1878288016112b0565b949793965093946060013593505050565b803561ffff811681146113c457600080fd5b919050565b600080604083850312156113dc57600080fd5b823591506113ec602084016113b2565b90509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561142d57835183529284019291840191600101611411565b50909695505050505050565b6000815180845260005b8181101561145f57602081850181015186830182015201611443565b81811115611471576000602083870101525b50601f01601f19169290920160200192915050565b60a08152600061149960a0830188611439565b82810360208401526114ab8188611439565b6040840196909652505061ffff9283166060820152911660809091015292915050565b60008060008060008060c087890312156114e757600080fd5b86359550602087013567ffffffffffffffff8082111561150657600080fd5b6115128a838b016112b0565b9650604089013591508082111561152857600080fd5b5061153589828a016112b0565b9450506060870135925061154b608088016113b2565b915061155960a088016113b2565b90509295509295509295565b73ffffffffffffffffffffffffffffffffffffffff8816815286602082015260e06040820152600061159a60e0830188611439565b82810360608401526115ac8188611439565b6080840196909652505061ffff92831660a0820152911660c090910152949350505050565b634e487b7160e01b600052601160045260246000fd5b600061ffff808316818516808303821115611604576116046115d1565b01949350505050565b600181811c9082168061162157607f821691505b60208210810361164157634e487b7160e01b600052602260045260246000fd5b50919050565b8054600090600181811c908083168061166157607f831692505b6020808410820361168257634e487b7160e01b600052602260045260246000fd5b8388526020880182801561169d57600181146116ae576116d9565b60ff198716825282820197506116d9565b60008981526020902060005b878110156116d3578154848201529086019084016116ba565b83019850505b5050505050505092915050565b600061012073ffffffffffffffffffffffffffffffffffffffff8c1683528a602084015280604084015261171c8184018b611647565b90508281036060840152611730818a611647565b6080840198909852505061ffff94851660a082015292841660c084015263ffffffff9190911660e083015290911661010090910152949350505050565b600063ffffffff808316818516808303821115611604576116046115d1565b600061012073ffffffffffffffffffffffffffffffffffffffff8c1683528a60208401528060408401526117c28184018b611439565b90508281036060840152611730818a611439565b634e487b7160e01b600052603260045260246000fd5b6000828210156117fe576117fe6115d1565b500390565b634e487b7160e01b600052603160045260246000fdfea164736f6c634300080d000a";

type DAOCake_Rep_OrgsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOCake_Rep_OrgsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAOCake_Rep_Orgs__factory extends ContractFactory {
  constructor(...args: DAOCake_Rep_OrgsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DAOCake_Rep_Orgs> {
    return super.deploy(overrides || {}) as Promise<DAOCake_Rep_Orgs>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DAOCake_Rep_Orgs {
    return super.attach(address) as DAOCake_Rep_Orgs;
  }
  override connect(signer: Signer): DAOCake_Rep_Orgs__factory {
    return super.connect(signer) as DAOCake_Rep_Orgs__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOCake_Rep_OrgsInterface {
    return new utils.Interface(_abi) as DAOCake_Rep_OrgsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DAOCake_Rep_Orgs {
    return new Contract(address, _abi, signerOrProvider) as DAOCake_Rep_Orgs;
  }
}
