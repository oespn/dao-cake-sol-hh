/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  DAOCake_Rep_Orgs,
  DAOCake_Rep_OrgsInterface,
} from "../DAOCake_Rep_Orgs";
import type { PromiseOrValue } from "../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ref",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "members",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "voteForRequired",
        type: "uint16",
      },
    ],
    name: "LogNewOrg",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "LogRemOrg",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ref",
        type: "string",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "members",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "voteForRequired",
        type: "uint16",
      },
    ],
    name: "LogUpdateOrg",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getOrg",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "ref",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
      {
        internalType: "uint16",
        name: "nMembers",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "voteForRequired",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getOrgAtIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getOrgCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgKey",
        type: "bytes32",
      },
    ],
    name: "getOrgMembers",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "array",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orgKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
    ],
    name: "memberAdd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "ref",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
    ],
    name: "newOrg",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "remOrg",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "ref",
        type: "string",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
      {
        internalType: "uint16",
        name: "nMembers",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "voteForRequired",
        type: "uint16",
      },
    ],
    name: "updateOrg",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506110e4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80635c90bc561161007657806381e845891161005b57806381e8458914610134578063ea12889114610158578063f11369481461017857600080fd5b80635c90bc561461010e5780636751698a1461012157600080fd5b806313aa8b82146100a857806322283184146100ce57806323d26253146100e357806338a699a4146100eb575b600080fd5b6100bb6100b6366004610bf2565b61018b565b6040519081526020015b60405180910390f35b6100e16100dc366004610cae565b61019d565b005b6001546100bb565b6100fe6100f9366004610bf2565b61028d565b60405190151581526020016100c5565b6100e161011c366004610d23565b610299565b6100e161012f366004610bf2565b6103f3565b610147610142366004610bf2565b610489565b6040516100c5959493929190610d92565b61016b610166366004610bf2565b610651565b6040516100c59190610dda565b6100e1610186366004610e35565b61071f565b60006101978183610835565b92915050565b6101a860008561085f565b6000848152600260209081526040909120845190916101cb918391870190610b02565b5082516101e19060018301906020860190610b02565b506002810182905560038101805463ffffffff191662010001178155600582018054600181810183556000928352602080842090920186905585835260048501909152604091829020805460ff19169091179055905490517f65a3890cb89f183e84abf5e6910b7a05d9b149e8a0333adf9a242dbecfaf02739161027e913391899189918991899161ffff80821692620100009092041690610ecc565b60405180910390a15050505050565b60006101978183610989565b6102a4600083610989565b6103055760405162461bcd60e51b815260206004820152602760248201527f43616e27742061646420746f20616e204f7267207468617420646f65736e27746044820152661032bc34b9ba1760c91b60648201526084015b60405180910390fd5b600082815260026020908152604080832084845260048101909252822054909160ff909116151590036103965760038101546103469061ffff166001610f4e565b60038201805461ffff191661ffff929092169190911790556005810180546001818101835560009283526020808420909201859055848352600484019091526040909120805460ff191690911790555b60038101546040517f0f285b65106f603f6da338fc5456f347006118c23f2ab2f5c77545278ef6f918916103e6913391879186916001830191899161ffff8082169262010000909204169061104d565b60405180910390a1505050565b6103fe6000826109d9565b6000818152600260205260408120906104178282610b86565b610425600183016000610b86565b60006002830181905560038301805463ffffffff1916905561044b906005840190610bc3565b505060408051338152602081018390527fe64d627c106f3fc3a7c779a7a8e23f5e63ff1022b375d114bfde3cf997ed621d910160405180910390a150565b6060806000808061049a8187610989565b6104f25760405162461bcd60e51b8152602060048201526024808201527f43616e27742067657420616e204f7267207468617420646f65736e277420657860448201526334b9ba1760e11b60648201526084016102fc565b6000868152600260208190526040909120908101546003820154825483926001840192909161ffff808316926201000090041690859061053190610f74565b80601f016020809104026020016040519081016040528092919081815260200182805461055d90610f74565b80156105aa5780601f1061057f576101008083540402835291602001916105aa565b820191906000526020600020905b81548152906001019060200180831161058d57829003601f168201915b505050505094508380546105bd90610f74565b80601f01602080910402602001604051908101604052809291908181526020018280546105e990610f74565b80156106365780601f1061060b57610100808354040283529160200191610636565b820191906000526020600020905b81548152906001019060200180831161061957829003601f168201915b50505050509350955095509550955095505091939590929450565b606061065e600083610989565b6106b65760405162461bcd60e51b8152602060048201526024808201527f43616e27742067657420616e204f7267207468617420646f65736e277420657860448201526334b9ba1760e11b60648201526084016102fc565b60008281526002602090815260409182902060058101805484518185028101850190955280855291939290919083018282801561071257602002820191906000526020600020905b8154815260200190600101908083116106fe575b5050505050915050919050565b61072a600087610989565b6107865760405162461bcd60e51b815260206004820152602760248201527f43616e27742075706461746520616e204f7267207468617420646f65736e27746044820152661032bc34b9ba1760c91b60648201526084016102fc565b6000868152600260209081526040909120865190916107a9918391890190610b02565b5084516107bf9060018301906020880190610b02565b506002810184905560038101805461ffff848116620100000263ffffffff19909216908616171790556040517f0f285b65106f603f6da338fc5456f347006118c23f2ab2f5c77545278ef6f918906108249033908a908a908a908a908a908a90610ecc565b60405180910390a150505050505050565b600082600101828154811061084c5761084c611094565b9060005260206000200154905092915050565b60008190036108d65760405162461bcd60e51b815260206004820152602860248201527f556e6f7264657265644b65795365742831303029202d204b65792063616e6e6f60448201527f742062652030783000000000000000000000000000000000000000000000000060648201526084016102fc565b6108e08282610989565b156109535760405162461bcd60e51b815260206004820152603560248201527f556e6f7264657265644b65795365742831303129202d204b657920616c72656160448201527f64792065786973747320696e20746865207365742e000000000000000000000060648201526084016102fc565b600180830180548083018255600082815260209020018390555461097791906110aa565b60009182526020929092526040902055565b6001820154600090810361099f57506000610197565b60008281526020849052604090205460018401805484929081106109c5576109c5611094565b906000526020600020015414905092915050565b6109e38282610989565b610a555760405162461bcd60e51b815260206004820152603560248201527f556e6f7264657265644b65795365742831303229202d204b657920646f65732060448201527f6e6f7420657869737420696e20746865207365742e000000000000000000000060648201526084016102fc565b60018281018054600092610a68916110aa565b81548110610a7857610a78611094565b6000918252602080832090910154848352908590526040808320548284529220829055600185018054919350839183908110610ab657610ab6611094565b600091825260208083209091019290925584815290859052604081205560018401805480610ae657610ae66110c1565b6001900381819060005260206000200160009055905550505050565b828054610b0e90610f74565b90600052602060002090601f016020900481019282610b305760008555610b76565b82601f10610b4957805160ff1916838001178555610b76565b82800160010185558215610b76579182015b82811115610b76578251825591602001919060010190610b5b565b50610b82929150610bdd565b5090565b508054610b9290610f74565b6000825580601f10610ba2575050565b601f016020900490600052602060002090810190610bc09190610bdd565b50565b5080546000825590600052602060002090810190610bc091905b5b80821115610b825760008155600101610bde565b600060208284031215610c0457600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610c3257600080fd5b813567ffffffffffffffff80821115610c4d57610c4d610c0b565b604051601f8301601f19908116603f01168101908282118183101715610c7557610c75610c0b565b81604052838152866020858801011115610c8e57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060008060808587031215610cc457600080fd5b84359350602085013567ffffffffffffffff80821115610ce357600080fd5b610cef88838901610c21565b94506040870135915080821115610d0557600080fd5b50610d1287828801610c21565b949793965093946060013593505050565b60008060408385031215610d3657600080fd5b50508035926020909101359150565b6000815180845260005b81811015610d6b57602081850181015186830182015201610d4f565b81811115610d7d576000602083870101525b50601f01601f19169290920160200192915050565b60a081526000610da560a0830188610d45565b8281036020840152610db78188610d45565b6040840196909652505061ffff9283166060820152911660809091015292915050565b6020808252825182820181905260009190848201906040850190845b81811015610e1257835183529284019291840191600101610df6565b50909695505050505050565b803561ffff81168114610e3057600080fd5b919050565b60008060008060008060c08789031215610e4e57600080fd5b86359550602087013567ffffffffffffffff80821115610e6d57600080fd5b610e798a838b01610c21565b96506040890135915080821115610e8f57600080fd5b50610e9c89828a01610c21565b94505060608701359250610eb260808801610e1e565b9150610ec060a08801610e1e565b90509295509295509295565b73ffffffffffffffffffffffffffffffffffffffff8816815286602082015260e060408201526000610f0160e0830188610d45565b8281036060840152610f138188610d45565b6080840196909652505061ffff92831660a0820152911660c090910152949350505050565b634e487b7160e01b600052601160045260246000fd5b600061ffff808316818516808303821115610f6b57610f6b610f38565b01949350505050565b600181811c90821680610f8857607f821691505b602082108103610fa857634e487b7160e01b600052602260045260246000fd5b50919050565b8054600090600181811c9080831680610fc857607f831692505b60208084108203610fe957634e487b7160e01b600052602260045260246000fd5b83885260208801828015611004576001811461101557611040565b60ff19871682528282019750611040565b60008981526020902060005b8781101561103a57815484820152908601908401611021565b83019850505b5050505050505092915050565b73ffffffffffffffffffffffffffffffffffffffff8816815286602082015260e06040820152600061108260e0830188610fae565b8281036060840152610f138188610fae565b634e487b7160e01b600052603260045260246000fd5b6000828210156110bc576110bc610f38565b500390565b634e487b7160e01b600052603160045260246000fdfea164736f6c634300080d000a";

type DAOCake_Rep_OrgsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOCake_Rep_OrgsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAOCake_Rep_Orgs__factory extends ContractFactory {
  constructor(...args: DAOCake_Rep_OrgsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DAOCake_Rep_Orgs> {
    return super.deploy(overrides || {}) as Promise<DAOCake_Rep_Orgs>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DAOCake_Rep_Orgs {
    return super.attach(address) as DAOCake_Rep_Orgs;
  }
  override connect(signer: Signer): DAOCake_Rep_Orgs__factory {
    return super.connect(signer) as DAOCake_Rep_Orgs__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOCake_Rep_OrgsInterface {
    return new utils.Interface(_abi) as DAOCake_Rep_OrgsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DAOCake_Rep_Orgs {
    return new Contract(address, _abi, signerOrProvider) as DAOCake_Rep_Orgs;
  }
}
