/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  DAOCake_Rep_Proposals,
  DAOCake_Rep_ProposalsInterface,
} from "../DAOCake_Rep_Proposals";
import type { PromiseOrValue } from "../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uuid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "doc_cid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ref_id",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "nVotes",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "enum DAOCake_Entities.ProposalType",
        name: "proposalType",
        type: "uint8",
      },
    ],
    name: "LogNewProposal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "LogRemProposal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uuid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "doc_cid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ref_id",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "nVotes",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "enum DAOCake_Entities.ProposalType",
        name: "proposalType",
        type: "uint8",
      },
    ],
    name: "LogUpdateProposal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getProposal",
    outputs: [
      {
        internalType: "bytes32",
        name: "orgKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "uuid",
        type: "string",
      },
      {
        internalType: "string",
        name: "doc_cid",
        type: "string",
      },
      {
        internalType: "string",
        name: "ref_id",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "nVotes",
        type: "uint16",
      },
      {
        internalType: "enum DAOCake_Entities.ProposalType",
        name: "proposalType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getProposalAtIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "proposalKey",
        type: "bytes32",
      },
    ],
    name: "getProposalVotes",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "array",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "orgKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "uuid",
        type: "string",
      },
      {
        internalType: "string",
        name: "doc_cid",
        type: "string",
      },
      {
        internalType: "string",
        name: "ref_id",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        internalType: "enum DAOCake_Entities.ProposalType",
        name: "proposalType",
        type: "uint8",
      },
    ],
    name: "newProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "remProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "proposalKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
    ],
    name: "voteAdd",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611218806100206000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80638b979f511161005b5780638b979f5114610105578063be2cf09a14610126578063bff28ea814610139578063c08cc02d1461015957600080fd5b806319f3134f1461008d57806336ed4bea146100a257806338a699a4146100b5578063430694cf146100dd575b600080fd5b6100a061009b366004610d97565b610161565b005b6100a06100b0366004610e7c565b6102c4565b6100c86100c3366004610e9e565b610456565b60405190151581526020015b60405180910390f35b6100f06100eb366004610e9e565b610468565b6040516100d499989796959493929190610f3c565b610118610113366004610e9e565b610779565b6040519081526020016100d4565b6100a0610134366004610e9e565b610785565b61014c610147366004610e9e565b610850565b6040516100d49190610fc7565b600154610118565b61016c60008a610923565b6000898152600260208181526040909220908101899055875190916101959183918a0190610bf0565b5085516101ab9060038301906020890190610bf0565b5084516101c19060048301906020880190610bf0565b5083516101d79060058301906020870190610bf0565b504260068201556007810183905560088101805460ff198116825583919061ffff191661010083600281111561020f5761020f610f04565b021790555060088101805463ffff00001916620100009081178255600a8301805460018181018355600092835260208084209092018d90558c835260098601909152604091829020805460ff19169091179055915491517f273d863db7f8ca25a93172911e9306b6ef5e747dd39ddd3ce5e7600b04dc8cf0926102b09233928f928d928d928d928d928d9290820461ffff1691610100900460ff169061100b565b60405180910390a150505050505050505050565b6102cf600083610a4d565b6103465760405162461bcd60e51b815260206004820152602c60248201527f43616e27742061646420746f20616e2050726f706f73616c207468617420646f60448201527f65736e27742065786973742e000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600082815260026020908152604080832084845260098101909252822054909160ff909116151590036103e657600881015461038d9062010000900461ffff166001611057565b60088201805461ffff92909216620100000263ffff000019909216919091179055600a810180546001818101835560009283526020808420909201859055848352600984019091526040909120805460ff191690911790555b600781015460088201546040517fb9d28efdcaf23c214fcafe705a29a210ae3bacc801cf97c27884e6c42b4105549261044992339288928792600384019260048501926005860192909162010000820461ffff1691610100900460ff1690611156565b60405180910390a1505050565b60006104628183610a4d565b92915050565b600080606080808084808061047d818b610a4d565b6104da5760405162461bcd60e51b815260206004820152602860248201527f43616e27742067657420612050726f706f73616c207468617420646f65736e276044820152673a1032bc34b9ba1760c11b606482015260840161033d565b60008a815260026020819052604090912060018101549181015460078201546008830154835493949385926003840192600485019260058601929162010000810461ffff169161010090910460ff169087906105359061107d565b80601f01602080910402602001604051908101604052809291908181526020018280546105619061107d565b80156105ae5780601f10610583576101008083540402835291602001916105ae565b820191906000526020600020905b81548152906001019060200180831161059157829003601f168201915b505050505096508580546105c19061107d565b80601f01602080910402602001604051908101604052809291908181526020018280546105ed9061107d565b801561063a5780601f1061060f5761010080835404028352916020019161063a565b820191906000526020600020905b81548152906001019060200180831161061d57829003601f168201915b5050505050955084805461064d9061107d565b80601f01602080910402602001604051908101604052809291908181526020018280546106799061107d565b80156106c65780601f1061069b576101008083540402835291602001916106c6565b820191906000526020600020905b8154815290600101906020018083116106a957829003601f168201915b505050505094508380546106d99061107d565b80601f01602080910402602001604051908101604052809291908181526020018280546107059061107d565b80156107525780601f1061072757610100808354040283529160200191610752565b820191906000526020600020905b81548152906001019060200180831161073557829003601f168201915b50505050509350995099509950995099509950995099509950509193959799909294969850565b60006104628183610a9d565b610790600082610ac7565b6000818152600260205260408120906107a98282610c74565b600182016000905560028201600090556003820160006107c99190610c74565b6107d7600483016000610c74565b6107e5600583016000610c74565b6000600683018190556007830181905560088301805463ffffffff1916905561081290600a840190610cb1565b505060408051338152602081018390527fd7f2608e52db7f98db43f741283f2df3b0368f1857b06341d3aadff602fb1bf5910160405180910390a150565b606061085d600083610a4d565b6108ba5760405162461bcd60e51b815260206004820152602860248201527f43616e27742067657420612050726f706f73616c207468617420646f65736e276044820152673a1032bc34b9ba1760c11b606482015260840161033d565b600082815260026020908152604091829020600a8101805484518185028101850190955280855291939290919083018282801561091657602002820191906000526020600020905b815481526020019060010190808311610902575b5050505050915050919050565b600081900361099a5760405162461bcd60e51b815260206004820152602860248201527f556e6f7264657265644b65795365742831303029202d204b65792063616e6e6f60448201527f7420626520307830000000000000000000000000000000000000000000000000606482015260840161033d565b6109a48282610a4d565b15610a175760405162461bcd60e51b815260206004820152603560248201527f556e6f7264657265644b65795365742831303129202d204b657920616c72656160448201527f64792065786973747320696e20746865207365742e0000000000000000000000606482015260840161033d565b6001808301805480830182556000828152602090200183905554610a3b91906111c8565b60009182526020929092526040902055565b60018201546000908103610a6357506000610462565b6000828152602084905260409020546001840180548492908110610a8957610a896111df565b906000526020600020015414905092915050565b6000826001018281548110610ab457610ab46111df565b9060005260206000200154905092915050565b610ad18282610a4d565b610b435760405162461bcd60e51b815260206004820152603560248201527f556e6f7264657265644b65795365742831303229202d204b657920646f65732060448201527f6e6f7420657869737420696e20746865207365742e0000000000000000000000606482015260840161033d565b60018281018054600092610b56916111c8565b81548110610b6657610b666111df565b6000918252602080832090910154848352908590526040808320548284529220829055600185018054919350839183908110610ba457610ba46111df565b600091825260208083209091019290925584815290859052604081205560018401805480610bd457610bd46111f5565b6001900381819060005260206000200160009055905550505050565b828054610bfc9061107d565b90600052602060002090601f016020900481019282610c1e5760008555610c64565b82601f10610c3757805160ff1916838001178555610c64565b82800160010185558215610c64579182015b82811115610c64578251825591602001919060010190610c49565b50610c70929150610ccb565b5090565b508054610c809061107d565b6000825580601f10610c90575050565b601f016020900490600052602060002090810190610cae9190610ccb565b50565b5080546000825590600052602060002090810190610cae91905b5b80821115610c705760008155600101610ccc565b634e487b7160e01b600052604160045260246000fd5b600082601f830112610d0757600080fd5b813567ffffffffffffffff80821115610d2257610d22610ce0565b604051601f8301601f19908116603f01168101908282118183101715610d4a57610d4a610ce0565b81604052838152866020858801011115610d6357600080fd5b836020870160208301376000602085830101528094505050505092915050565b803560038110610d9257600080fd5b919050565b60008060008060008060008060006101208a8c031215610db657600080fd5b8935985060208a0135975060408a0135965060608a013567ffffffffffffffff80821115610de357600080fd5b610def8d838e01610cf6565b975060808c0135915080821115610e0557600080fd5b610e118d838e01610cf6565b965060a08c0135915080821115610e2757600080fd5b610e338d838e01610cf6565b955060c08c0135915080821115610e4957600080fd5b50610e568c828d01610cf6565b93505060e08a01359150610e6d6101008b01610d83565b90509295985092959850929598565b60008060408385031215610e8f57600080fd5b50508035926020909101359150565b600060208284031215610eb057600080fd5b5035919050565b6000815180845260005b81811015610edd57602081850181015186830182015201610ec1565b81811115610eef576000602083870101525b50601f01601f19169290920160200192915050565b634e487b7160e01b600052602160045260246000fd5b60038110610f3857634e487b7160e01b600052602160045260246000fd5b9052565b60006101208b83528a6020840152806040840152610f5c8184018b610eb7565b90508281036060840152610f70818a610eb7565b90508281036080840152610f848189610eb7565b905082810360a0840152610f988188610eb7565b9150508460c083015261ffff841660e0830152610fb9610100830184610f1a565b9a9950505050505050505050565b6020808252825182820181905260009190848201906040850190845b81811015610fff57835183529284019291840191600101610fe3565b50909695505050505050565b600061012073ffffffffffffffffffffffffffffffffffffffff8c1683528a6020840152806040840152610f5c8184018b610eb7565b634e487b7160e01b600052601160045260246000fd5b600061ffff80831681851680830382111561107457611074611041565b01949350505050565b600181811c9082168061109157607f821691505b6020821081036110b157634e487b7160e01b600052602260045260246000fd5b50919050565b8054600090600181811c90808316806110d157607f831692505b602080841082036110f257634e487b7160e01b600052602260045260246000fd5b8388526020880182801561110d576001811461111e57611149565b60ff19871682528282019750611149565b60008981526020902060005b878110156111435781548482015290860190840161112a565b83019850505b5050505050505092915050565b600061012073ffffffffffffffffffffffffffffffffffffffff8c1683528a602084015280604084015261118c8184018b6110b7565b905082810360608401526111a0818a6110b7565b905082810360808401526111b481896110b7565b905082810360a0840152610f9881886110b7565b6000828210156111da576111da611041565b500390565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052603160045260246000fdfea164736f6c634300080d000a";

type DAOCake_Rep_ProposalsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOCake_Rep_ProposalsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAOCake_Rep_Proposals__factory extends ContractFactory {
  constructor(...args: DAOCake_Rep_ProposalsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DAOCake_Rep_Proposals> {
    return super.deploy(overrides || {}) as Promise<DAOCake_Rep_Proposals>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DAOCake_Rep_Proposals {
    return super.attach(address) as DAOCake_Rep_Proposals;
  }
  override connect(signer: Signer): DAOCake_Rep_Proposals__factory {
    return super.connect(signer) as DAOCake_Rep_Proposals__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOCake_Rep_ProposalsInterface {
    return new utils.Interface(_abi) as DAOCake_Rep_ProposalsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DAOCake_Rep_Proposals {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DAOCake_Rep_Proposals;
  }
}
