/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  DAOCake_Rep_Proposals,
  DAOCake_Rep_ProposalsInterface,
} from "../DAOCake_Rep_Proposals";
import type { PromiseOrValue } from "../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uuid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "doc_cid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ref_id",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "nVotes",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "nVotesFor",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "nVotesRequired",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "enum DAOCake_Entities.ProposalType",
        name: "proposalType",
        type: "uint8",
      },
    ],
    name: "LogNewProposal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "LogRemProposal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uuid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "doc_cid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ref_id",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "nVotes",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "nVotesFor",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "nVotesRequired",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "enum DAOCake_Entities.ProposalType",
        name: "proposalType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum DAOCake_Entities.DecisionStatus",
        name: "decisionStatus",
        type: "uint8",
      },
    ],
    name: "LogUpdateProposal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getProposal",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "orgKey",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "memberKey",
            type: "bytes32",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "uuid",
            type: "string",
          },
          {
            internalType: "string",
            name: "doc_cid",
            type: "string",
          },
          {
            internalType: "string",
            name: "ref_id",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "total",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "nVotes",
            type: "uint16",
          },
          {
            internalType: "enum DAOCake_Entities.ProposalType",
            name: "proposalType",
            type: "uint8",
          },
          {
            internalType: "enum DAOCake_Entities.DecisionStatus",
            name: "decision",
            type: "uint8",
          },
        ],
        internalType: "struct DAOCake_Entities.ProposalReturn",
        name: "r",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getProposalAtIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "proposalKey",
        type: "bytes32",
      },
    ],
    name: "getProposalVotes",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "array",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "proposalKey",
        type: "bytes32",
      },
    ],
    name: "getVotesCount",
    outputs: [
      {
        internalType: "uint16",
        name: "votes",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "votesFor",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "votesRequired",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "orgKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "uuid",
        type: "string",
      },
      {
        internalType: "string",
        name: "doc_cid",
        type: "string",
      },
      {
        internalType: "string",
        name: "ref_id",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "votesRequired",
        type: "uint16",
      },
      {
        internalType: "enum DAOCake_Entities.ProposalType",
        name: "proposalType",
        type: "uint8",
      },
    ],
    name: "newProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "remProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "voteKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "proposalKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "voteFor",
        type: "bool",
      },
    ],
    name: "voteAdd",
    outputs: [
      {
        internalType: "enum DAOCake_Entities.ProposalType",
        name: "action",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type DAOCake_Rep_ProposalsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOCake_Rep_ProposalsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAOCake_Rep_Proposals__factory extends ContractFactory {
  constructor(...args: DAOCake_Rep_ProposalsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DAOCake_Rep_Proposals> {
    return super.deploy(overrides || {}) as Promise<DAOCake_Rep_Proposals>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DAOCake_Rep_Proposals {
    return super.attach(address) as DAOCake_Rep_Proposals;
  }
  override connect(signer: Signer): DAOCake_Rep_Proposals__factory {
    return super.connect(signer) as DAOCake_Rep_Proposals__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOCake_Rep_ProposalsInterface {
    return new utils.Interface(_abi) as DAOCake_Rep_ProposalsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DAOCake_Rep_Proposals {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DAOCake_Rep_Proposals;
  }
}
