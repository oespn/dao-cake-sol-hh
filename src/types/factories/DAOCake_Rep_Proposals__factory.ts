/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  DAOCake_Rep_Proposals,
  DAOCake_Rep_ProposalsInterface,
} from "../DAOCake_Rep_Proposals";
import type { PromiseOrValue } from "../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uuid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "doc_cid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ref_id",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "nVotes",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "nVotesFor",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "nVotesRequired",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "enum DAOCake_Entities.ProposalType",
        name: "proposalType",
        type: "uint8",
      },
    ],
    name: "LogNewProposal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "LogRemProposal",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "uuid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "doc_cid",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "ref_id",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "nVotes",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "nVotesFor",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "uint16",
        name: "nVotesRequired",
        type: "uint16",
      },
      {
        indexed: false,
        internalType: "enum DAOCake_Entities.ProposalType",
        name: "proposalType",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "enum DAOCake_Entities.DecisionStatus",
        name: "decisionStatus",
        type: "uint8",
      },
    ],
    name: "LogUpdateProposal",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getProposal",
    outputs: [
      {
        internalType: "bytes32",
        name: "orgKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "uuid",
        type: "string",
      },
      {
        internalType: "string",
        name: "doc_cid",
        type: "string",
      },
      {
        internalType: "string",
        name: "ref_id",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "nVotes",
        type: "uint16",
      },
      {
        internalType: "enum DAOCake_Entities.ProposalType",
        name: "proposalType",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getProposalAtIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProposalCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "proposalKey",
        type: "bytes32",
      },
    ],
    name: "getProposalVotes",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "array",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "proposalKey",
        type: "bytes32",
      },
    ],
    name: "getVotesCount",
    outputs: [
      {
        internalType: "uint16",
        name: "votes",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "votesFor",
        type: "uint16",
      },
      {
        internalType: "uint16",
        name: "votesRequired",
        type: "uint16",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "uuid",
        type: "string",
      },
      {
        internalType: "string",
        name: "doc_cid",
        type: "string",
      },
      {
        internalType: "string",
        name: "ref_id",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "total",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "votesRequired",
        type: "uint16",
      },
      {
        internalType: "enum DAOCake_Entities.ProposalType",
        name: "proposalType",
        type: "uint8",
      },
    ],
    name: "newProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "remProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "proposalKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "voteFor",
        type: "bool",
      },
    ],
    name: "voteAdd",
    outputs: [
      {
        internalType: "enum DAOCake_Entities.ProposalType",
        name: "action",
        type: "uint8",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061160a806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c80638b979f5111610076578063be2cf09a1161005b578063be2cf09a1461018b578063bff28ea81461019e578063c08cc02d146101be57600080fd5b80638b979f51146101555780639fac7bb41461017657600080fd5b8063144c447d146100a857806338a699a4146100d2578063430694cf146100f55780637ac6d9b11461011d575b600080fd5b6100bb6100b6366004610fa3565b6101c6565b6040516100c992919061100b565b60405180910390f35b6100e56100e0366004611026565b610442565b60405190151581526020016100c9565b610108610103366004611026565b610454565b6040516100c99998979695949392919061108c565b61013061012b366004611026565b610767565b6040805161ffff948516815292841660208401529216918101919091526060016100c9565b610168610163366004611026565b61080a565b6040519081526020016100c9565b6101896101843660046111e0565b610816565b005b610189610199366004611026565b610a3b565b6101b16101ac366004611026565b610b13565b6040516100c991906112cc565b600154610168565b6000806101d38186610be6565b61024a5760405162461bcd60e51b815260206004820152602c60248201527f43616e27742061646420746f20616e2050726f706f73616c207468617420646f60448201527f65736e27742065786973742e000000000000000000000000000000000000000060648201526084015b60405180910390fd5b600085815260026020908152604080832087845260098101909252822054909160ff909116151590036103b757600881015461029390640100000000900461ffff166001611326565b60088201805461ffff929092166401000000000265ffff0000000019909216919091179055600a810180546001818101835560009283526020808420909201889055878352600984019091526040909120805460ff1916909117905583156103b757600b8101546103099061ffff166001611326565b600b8201805461ffff191661ffff929092169190911790556000858152600c820160205260408120805460ff19166001179055600882015460ff16600281111561035557610355610fe1565b036103b7576008810154600b82015461ffff6201000090920482169116106103b75760088101805460ff19166001179081905560ff610100909104169250600383818111156103a6576103a6610fe1565b036103b75760039250806007015491505b60078101546008820154600b8301546040517ff55196be767918a729776a6778a9bd6812359991eb8f54883ea1d1bb9d2041d2936104319333938c93889360038501936004860193600587019361ffff6401000000008404811693928116926201000081049091169160ff61010083048116921690611435565b60405180910390a150935093915050565b600061044e8183610be6565b92915050565b6000806060808080848080610469818b610be6565b6104c65760405162461bcd60e51b815260206004820152602860248201527f43616e27742067657420612050726f706f73616c207468617420646f65736e276044820152673a1032bc34b9ba1760c11b6064820152608401610241565b60008a8152600260208190526040909120600181015491810154600782015460088301548354939493859260038401926004850192600586019291640100000000810461ffff169161010090910460ff169087906105239061134c565b80601f016020809104026020016040519081016040528092919081815260200182805461054f9061134c565b801561059c5780601f106105715761010080835404028352916020019161059c565b820191906000526020600020905b81548152906001019060200180831161057f57829003601f168201915b505050505096508580546105af9061134c565b80601f01602080910402602001604051908101604052809291908181526020018280546105db9061134c565b80156106285780601f106105fd57610100808354040283529160200191610628565b820191906000526020600020905b81548152906001019060200180831161060b57829003601f168201915b5050505050955084805461063b9061134c565b80601f01602080910402602001604051908101604052809291908181526020018280546106679061134c565b80156106b45780601f10610689576101008083540402835291602001916106b4565b820191906000526020600020905b81548152906001019060200180831161069757829003601f168201915b505050505094508380546106c79061134c565b80601f01602080910402602001604051908101604052809291908181526020018280546106f39061134c565b80156107405780601f1061071557610100808354040283529160200191610740565b820191906000526020600020905b81548152906001019060200180831161072357829003601f168201915b50505050509350995099509950995099509950995099509950509193959799909294969850565b600080806107758185610be6565b6107d25760405162461bcd60e51b815260206004820152602860248201527f43616e27742067657420612050726f706f73616c207468617420646f65736e276044820152673a1032bc34b9ba1760c11b6064820152608401610241565b50505060009081526002602052604090206008810154600b9091015461ffff6401000000008304811693918116926201000090041690565b600061044e8183610c36565b61082160008a610c60565b60008981526002602081815260409092209081018a90558851909161084a9183918b0190610eb3565b50865161086090600383019060208a0190610eb3565b5085516108769060048301906020890190610eb3565b50845161088c9060058301906020880190610eb3565b504260068201556007810184905560088101805460ff198116825583919061ffff19166101008360038111156108c4576108c4610fe1565b0217905550828160080160026101000a81548161ffff021916908361ffff16021790555060018160080160046101000a81548161ffff021916908361ffff16021790555080600a0189908060018154018082558091505060019003906000526020600020016000909190919091505560018160090160008b815260200190815260200160002060006101000a81548160ff021916908315150217905550600181600b0160006101000a81548161ffff021916908361ffff160217905550600181600c0160008b815260200190815260200160002060006101000a81548160ff0219169083151502179055507fa163816913091132447c0758531d2ada4c725d9c8d508a966d0d1ce2604b2d87338b8a8a8a8a8a8860080160049054906101000a900461ffff1689600b0160009054906101000a900461ffff168c8b60080160019054906101000a900460ff16604051610a279b9a99989796959493929190611503565b60405180910390a150505050505050505050565b610a46600082610d8a565b600081815260026020526040812090610a5f8282610f37565b60018201600090556002820160009055600382016000610a7f9190610f37565b610a8d600483016000610f37565b610a9b600583016000610f37565b6000600683018190556007830181905560088301805465ffffffffffff19169055610aca90600a840190610f74565b50600b01805461ffff1916905560408051338152602081018390527fd7f2608e52db7f98db43f741283f2df3b0368f1857b06341d3aadff602fb1bf5910160405180910390a150565b6060610b20600083610be6565b610b7d5760405162461bcd60e51b815260206004820152602860248201527f43616e27742067657420612050726f706f73616c207468617420646f65736e276044820152673a1032bc34b9ba1760c11b6064820152608401610241565b600082815260026020908152604091829020600a81018054845181850281018501909552808552919392909190830182828015610bd957602002820191906000526020600020905b815481526020019060010190808311610bc5575b5050505050915050919050565b60018201546000908103610bfc5750600061044e565b6000828152602084905260409020546001840180548492908110610c2257610c226115ba565b906000526020600020015414905092915050565b6000826001018281548110610c4d57610c4d6115ba565b9060005260206000200154905092915050565b6000819003610cd75760405162461bcd60e51b815260206004820152602860248201527f556e6f7264657265644b65795365742831303029202d204b65792063616e6e6f60448201527f74206265203078300000000000000000000000000000000000000000000000006064820152608401610241565b610ce18282610be6565b15610d545760405162461bcd60e51b815260206004820152603560248201527f556e6f7264657265644b65795365742831303129202d204b657920616c72656160448201527f64792065786973747320696e20746865207365742e00000000000000000000006064820152608401610241565b6001808301805480830182556000828152602090200183905554610d7891906115d0565b60009182526020929092526040902055565b610d948282610be6565b610e065760405162461bcd60e51b815260206004820152603560248201527f556e6f7264657265644b65795365742831303229202d204b657920646f65732060448201527f6e6f7420657869737420696e20746865207365742e00000000000000000000006064820152608401610241565b60018281018054600092610e19916115d0565b81548110610e2957610e296115ba565b6000918252602080832090910154848352908590526040808320548284529220829055600185018054919350839183908110610e6757610e676115ba565b600091825260208083209091019290925584815290859052604081205560018401805480610e9757610e976115e7565b6001900381819060005260206000200160009055905550505050565b828054610ebf9061134c565b90600052602060002090601f016020900481019282610ee15760008555610f27565b82601f10610efa57805160ff1916838001178555610f27565b82800160010185558215610f27579182015b82811115610f27578251825591602001919060010190610f0c565b50610f33929150610f8e565b5090565b508054610f439061134c565b6000825580601f10610f53575050565b601f016020900490600052602060002090810190610f719190610f8e565b50565b5080546000825590600052602060002090810190610f7191905b5b80821115610f335760008155600101610f8f565b600080600060608486031215610fb857600080fd5b833592506020840135915060408401358015158114610fd657600080fd5b809150509250925092565b634e487b7160e01b600052602160045260246000fd5b6004811061100757611007610fe1565b9052565b604081016110198285610ff7565b8260208301529392505050565b60006020828403121561103857600080fd5b5035919050565b6000815180845260005b8181101561106557602081850181015186830182015201611049565b81811115611077576000602083870101525b50601f01601f19169290920160200192915050565b60006101208b83528a60208401528060408401526110ac8184018b61103f565b905082810360608401526110c0818a61103f565b905082810360808401526110d4818961103f565b905082810360a08401526110e8818861103f565b9150508460c083015261ffff841660e0830152611109610100830184610ff7565b9a9950505050505050505050565b634e487b7160e01b600052604160045260246000fd5b600082601f83011261113e57600080fd5b813567ffffffffffffffff8082111561115957611159611117565b604051601f8301601f19908116603f0116810190828211818310171561118157611181611117565b8160405283815286602085880101111561119a57600080fd5b836020870160208301376000602085830101528094505050505092915050565b803561ffff811681146111cc57600080fd5b919050565b8035600481106111cc57600080fd5b60008060008060008060008060006101208a8c0312156111ff57600080fd5b8935985060208a0135975060408a013567ffffffffffffffff8082111561122557600080fd5b6112318d838e0161112d565b985060608c013591508082111561124757600080fd5b6112538d838e0161112d565b975060808c013591508082111561126957600080fd5b6112758d838e0161112d565b965060a08c013591508082111561128b57600080fd5b506112988c828d0161112d565b94505060c08a013592506112ae60e08b016111ba565b91506112bd6101008b016111d1565b90509295985092959850929598565b6020808252825182820181905260009190848201906040850190845b81811015611304578351835292840192918401916001016112e8565b50909695505050505050565b634e487b7160e01b600052601160045260246000fd5b600061ffff80831681851680830382111561134357611343611310565b01949350505050565b600181811c9082168061136057607f821691505b60208210810361138057634e487b7160e01b600052602260045260246000fd5b50919050565b8054600090600181811c90808316806113a057607f831692505b602080841082036113c157634e487b7160e01b600052602260045260246000fd5b838852602088018280156113dc57600181146113ed57611418565b60ff19871682528282019750611418565b60008981526020902060005b87811015611412578154848201529086019084016113f9565b83019850505b5050505050505092915050565b6003811061100757611007610fe1565b600061018073ffffffffffffffffffffffffffffffffffffffff8f1683528d602084015280604084015261146b8184018e611386565b9050828103606084015261147f818d611386565b90508281036080840152611493818c611386565b905082810360a08401526114a7818b611386565b9150508760c083015261ffff871660e08301526114cb61010083018761ffff169052565b61ffff85166101208301526114e4610140830185610ff7565b6114f2610160830184611425565b9d9c50505050505050505050505050565b600061016073ffffffffffffffffffffffffffffffffffffffff8e1683528c60208401528060408401526115398184018d61103f565b9050828103606084015261154d818c61103f565b90508281036080840152611561818b61103f565b905082810360a0840152611575818a61103f565b9150508660c083015261ffff80871660e0840152808616610100840152808516610120840152506115aa610140830184610ff7565b9c9b505050505050505050505050565b634e487b7160e01b600052603260045260246000fd5b6000828210156115e2576115e2611310565b500390565b634e487b7160e01b600052603160045260246000fdfea164736f6c634300080d000a";

type DAOCake_Rep_ProposalsConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOCake_Rep_ProposalsConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAOCake_Rep_Proposals__factory extends ContractFactory {
  constructor(...args: DAOCake_Rep_ProposalsConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DAOCake_Rep_Proposals> {
    return super.deploy(overrides || {}) as Promise<DAOCake_Rep_Proposals>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DAOCake_Rep_Proposals {
    return super.attach(address) as DAOCake_Rep_Proposals;
  }
  override connect(signer: Signer): DAOCake_Rep_Proposals__factory {
    return super.connect(signer) as DAOCake_Rep_Proposals__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOCake_Rep_ProposalsInterface {
    return new utils.Interface(_abi) as DAOCake_Rep_ProposalsInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DAOCake_Rep_Proposals {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as DAOCake_Rep_Proposals;
  }
}
