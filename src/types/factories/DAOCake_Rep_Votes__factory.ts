/* Autogenerated file. Do not edit manually. */

/* tslint:disable */

/* eslint-disable */
import type {
  DAOCake_Rep_Votes,
  DAOCake_Rep_VotesInterface,
} from "../DAOCake_Rep_Votes";
import type { PromiseOrValue } from "../common";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "proposalKey",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "voteFor",
        type: "bool",
      },
    ],
    name: "LogNewVote",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "exists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    name: "getVote",
    outputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "proposalKey",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "memberKey",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "voteFor",
            type: "bool",
          },
        ],
        internalType: "struct DAOCake_Entities.VoteStruct",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "getVoteAtIndex",
    outputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getVoteCount",
    outputs: [
      {
        internalType: "uint256",
        name: "count",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "proposalKey",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "memberKey",
        type: "bytes32",
      },
      {
        internalType: "bool",
        name: "voteFor",
        type: "bool",
      },
    ],
    name: "newVote",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506104b5806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c8063515508691161005057806351550869146100b5578063c7d08063146100ec578063e7b3387c1461010157600080fd5b8063201c8c901461006c57806338a699a414610092575b600080fd5b61007f61007a36600461040e565b610109565b6040519081526020015b60405180910390f35b6100a56100a036600461040e565b61011b565b6040519015158152602001610089565b6100c86100c336600461040e565b610127565b60408051825181526020808401519082015291810151151590820152606001610089565b6100ff6100fa366004610427565b6101ea565b005b60015461007f565b6000610115818361026a565b92915050565b60006101158183610294565b604080516060810182526000808252602082018190529181019190915261014f600083610294565b6101ac5760405162461bcd60e51b8152602060048201526024808201527f43616e277420676574206120566f7465207468617420646f65736e277420657860448201526334b9ba1760e11b60648201526084015b60405180910390fd5b506000908152600260208181526040928390208351606081018552815481526001820154928101929092529091015460ff1615159181019190915290565b6101f56000856102e4565b60008481526002602081815260409283902086815560018101869055918201805460ff1916851515908117909155835133815291820187905292810192909252907f3935192e7d095c468ff283bbf02deb5d730a35227491431d976c633864bb72479060600160405180910390a15050505050565b60008260010182815481106102815761028161046d565b9060005260206000200154905092915050565b600182015460009081036102aa57506000610115565b60008281526020849052604090205460018401805484929081106102d0576102d061046d565b906000526020600020015414905092915050565b600081900361035b5760405162461bcd60e51b815260206004820152602860248201527f556e6f7264657265644b65795365742831303029202d204b65792063616e6e6f60448201527f742062652030783000000000000000000000000000000000000000000000000060648201526084016101a3565b6103658282610294565b156103d85760405162461bcd60e51b815260206004820152603560248201527f556e6f7264657265644b65795365742831303129202d204b657920616c72656160448201527f64792065786973747320696e20746865207365742e000000000000000000000060648201526084016101a3565b60018083018054808301825560008281526020902001839055546103fc9190610483565b60009182526020929092526040902055565b60006020828403121561042057600080fd5b5035919050565b6000806000806080858703121561043d57600080fd5b8435935060208501359250604085013591506060850135801515811461046257600080fd5b939692955090935050565b634e487b7160e01b600052603260045260246000fd5b6000828210156104a357634e487b7160e01b600052601160045260246000fd5b50039056fea164736f6c634300080d000a";

type DAOCake_Rep_VotesConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: DAOCake_Rep_VotesConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class DAOCake_Rep_Votes__factory extends ContractFactory {
  constructor(...args: DAOCake_Rep_VotesConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<DAOCake_Rep_Votes> {
    return super.deploy(overrides || {}) as Promise<DAOCake_Rep_Votes>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): DAOCake_Rep_Votes {
    return super.attach(address) as DAOCake_Rep_Votes;
  }
  override connect(signer: Signer): DAOCake_Rep_Votes__factory {
    return super.connect(signer) as DAOCake_Rep_Votes__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DAOCake_Rep_VotesInterface {
    return new utils.Interface(_abi) as DAOCake_Rep_VotesInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DAOCake_Rep_Votes {
    return new Contract(address, _abi, signerOrProvider) as DAOCake_Rep_Votes;
  }
}
